exit
link
link.update(read: status)
status = params[:read]
exit
link
link.update(read: status)
link
status = params[:read]
exit
params[:read]
params[:link] == nil
params[:link]
params 
params
link_params
exit
@link = Link.find(params[:id])
params
exit
created_link.save!
created_link = Link.new(url: params["url"], title: params["title"], user_id: current_user.id) if correct_url?(link)
correct_url?(link)
 link = params["url"]
exit
 created_link = current_user.links.new(url: params["url"], title: params["title"]) if correct_url?(link)
correct_url?(link)
link = params["url"]
params
exit
Link.first.user
Link.first
User.first.link
User.first.links
User.first
params["link"]
params["link
params
exit
params[:user][:password]
params[:user]
params
exit
correct_url?(params["link"]["url"])
params["link"]["url"]
params
exit
if created_link.save
created_link.save
created_link = Link.new(url: link["url"], title: link["title"], user_id: current_user.id) if correct_url?(link["url"])
correct_url?(link["url"])
exit
!correct_url?(link["url"])
title_and_url_missing?
url_missing?
title_missing?
link
flash
exit
!incorrect_url?(link["url"])
next
exit
link["url"]
incorrect_url?(link["url"])
next
exit
incorrect_url?(link["url"])
next
exit
incorrect_url?(link["url"])
link
next
link
incorrect_url?(link["url"])
exit
URI.parse("turing.io")
URI.parse(turing.io)
URI.parse(params["link"]["url"])
URI.parse(params["link"]["url"]).valid?
URI.parse(params["link"]["url"]).true?
URI.parse(params["link"]["url"])
params["link"]
exit
User.last
exit
User.last.password
user.password_digest
user.password
user
exit
password_missing?
exit
password_missing?
exit
xit
params[:user][:password]
params[:user]
params
exit
params[:user][:email]
params[:user]
params
